# https://gist.github.com/althonos/6914b896789d3f2078d1e6237642c35c

# --- Setuptools metadata ---------------------------------------------------

[metadata]
name = pyhmmer
version = attr: pyhmmer.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pyhmmer
description = Cython bindings and Python interface to HMMER3.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
platform = posix
keywords = bioinformatics, profile, HMM, sequence, pfam
classifier =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Documentation = https://pyhmmer.readthedocs.io/en/stable/
    Bug Tracker = https://github.com/althonos/pyhmmer/issues
    Changelog = https://github.com/althonos/pyhmmer/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pyhmmer/
    Builds = https://git.embl.de/larralde/pyhmmer/-/pipelines
    Zenodo = https://doi.org/10.5281/zenodo.4270012
    PyPI = https://pypi.org/project/pyhmmer

[options]
zip_safe = false
packages = find:
python_requires = >=3.6
test_suite = tests
include_package_data = true
setup_requires =
    setuptools >=46.4
    cython ~=0.29.16
install_requires =
    psutil ~=5.8

[options.package_data]
pyhmmer = py.typed, *.pyi


# --- C libraries configuration ---------------------------------------------

[configure.divsufsort]
filename = divsufsort.h
copy = vendor/hmmer/libdivsufsort/divsufsort.h.in

[configure.easel]
filename = esl_config.h
constants =
    EASEL_DATE      = "Nov 2020"
    EASEL_COPYRIGHT = "Copyright (C) 2020 Howard Hughes Medical Institute"
    EASEL_LICENSE   = "Freely distributed under the BSD open source license."
    EASEL_VERSION   = "0.48"
    EASEL_URL       = "http://bioeasel.org/"
headers =
    stdio.h
    stdlib.h
    string.h
    inttypes.h
    stdint.h
    strings.h
    sys/stat.h
    sys/types.h
    unistd.h
    endian.h
    netinet/in.h
    sys/param.h
    sys/sysctl.h
functions =
    aligned_alloc
    erfc
    getpid
    _mm_malloc
    popen
    posix_memalign
    strcasecmp
    strsep
    sysconf
    sysctl
    times
    fseeko

[configure.hmmer]
filename = p7_config.h
constants =
    HMMER_VERSION     = "3.3.2"
    HMMER_DATE        = "Nov 2020"
    HMMER_LICENSE     = "Freely distributed under the BSD open source license."
    HMMER_URL         = "http://hmmer.org/"
    HMMER_COPYRIGHT   = "Copyright (C) 2020 Howard Hughes Medical Institute."
    p7_RAMLIMIT       = 32
    p7_NCPU           = "2"
    p7_ALILENGTH      = 50
    p7_ETARGET_AMINO  = 0.59
    p7_ETARGET_DNA    = 0.62
    p7_ETARGET_OTHER  = 1.0
    p7_SEQDBENV       = "BLASTDB"
    p7_HMMDBENV       = "PFAMDB"
    p7_MAXABET        = 20
    p7_MAXCODE        = 29
    p7_MAX_SC_TXTLEN  = 11
    p7_MAXDCHLET      = 20
headers =
    endian.h
    inttypes.h
    stdint.h
    unistd.h
    sys/types.h
    netinet/in.h
    sys/param.h
    sys/sysctl.h
functions =
    mkstemp
    popen
    putenv
    strcasecmp
    strsep
    times
    getpid
    sysctl
    sysconf
    getcwd
    chmod
    stat
    fstat
    erfc



# --- Python tools configuration --------------------------------------------

[coverage:run]
plugins = Cython.Coverage

[coverage:report]
include = 
    pyhmmer/*.py
    pyhmmer/*.pyx
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise UnexpectedError
    raise AllocationError

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true

[mypy-pyhmmer.tests.*]
ignore_errors = True
